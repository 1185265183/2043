<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.web.security.mapper.NetworkmetricsMapper">
  <resultMap id="BaseResultMap" type="cn.web.security.pojo.Networkmetrics">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="vertexNum" jdbcType="INTEGER" property="vertexnum" />
    <result column="edgeNum" jdbcType="INTEGER" property="edgenum" />
    <result column="networkDiameter" jdbcType="INTEGER" property="networkdiameter" />
    <result column="networkCoreness" jdbcType="INTEGER" property="networkcoreness" />
    <result column="nodeAverageDegree" jdbcType="DOUBLE" property="nodeaveragedegree" />
    <result column="averageShortestPathLength" jdbcType="DOUBLE" property="averageshortestpathlength" />
    <result column="networkEfficiency" jdbcType="DOUBLE" property="networkefficiency" />
    <result column="networkClusteringCoefficient" jdbcType="DOUBLE" property="networkclusteringcoefficient" />
    <result column="projectid" jdbcType="INTEGER" property="projectid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vertexNum, edgeNum, networkDiameter, networkCoreness, nodeAverageDegree, averageShortestPathLength, 
    networkEfficiency, networkClusteringCoefficient, projectid
  </sql>
  <select id="selectByExample" parameterType="cn.web.security.pojo.NetworkmetricsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from networkmetrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from networkmetrics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from networkmetrics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.web.security.pojo.NetworkmetricsExample">
    delete from networkmetrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.web.security.pojo.Networkmetrics">
    insert into networkmetrics (id, vertexNum, edgeNum, 
      networkDiameter, networkCoreness, nodeAverageDegree, 
      averageShortestPathLength, networkEfficiency, 
      networkClusteringCoefficient, projectid)
    values (#{id,jdbcType=INTEGER}, #{vertexnum,jdbcType=INTEGER}, #{edgenum,jdbcType=INTEGER}, 
      #{networkdiameter,jdbcType=INTEGER}, #{networkcoreness,jdbcType=INTEGER}, #{nodeaveragedegree,jdbcType=DOUBLE}, 
      #{averageshortestpathlength,jdbcType=DOUBLE}, #{networkefficiency,jdbcType=DOUBLE}, 
      #{networkclusteringcoefficient,jdbcType=DOUBLE}, #{projectid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.web.security.pojo.Networkmetrics">
    insert into networkmetrics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vertexnum != null">
        vertexNum,
      </if>
      <if test="edgenum != null">
        edgeNum,
      </if>
      <if test="networkdiameter != null">
        networkDiameter,
      </if>
      <if test="networkcoreness != null">
        networkCoreness,
      </if>
      <if test="nodeaveragedegree != null">
        nodeAverageDegree,
      </if>
      <if test="averageshortestpathlength != null">
        averageShortestPathLength,
      </if>
      <if test="networkefficiency != null">
        networkEfficiency,
      </if>
      <if test="networkclusteringcoefficient != null">
        networkClusteringCoefficient,
      </if>
      <if test="projectid != null">
        projectid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="vertexnum != null">
        #{vertexnum,jdbcType=INTEGER},
      </if>
      <if test="edgenum != null">
        #{edgenum,jdbcType=INTEGER},
      </if>
      <if test="networkdiameter != null">
        #{networkdiameter,jdbcType=INTEGER},
      </if>
      <if test="networkcoreness != null">
        #{networkcoreness,jdbcType=INTEGER},
      </if>
      <if test="nodeaveragedegree != null">
        #{nodeaveragedegree,jdbcType=DOUBLE},
      </if>
      <if test="averageshortestpathlength != null">
        #{averageshortestpathlength,jdbcType=DOUBLE},
      </if>
      <if test="networkefficiency != null">
        #{networkefficiency,jdbcType=DOUBLE},
      </if>
      <if test="networkclusteringcoefficient != null">
        #{networkclusteringcoefficient,jdbcType=DOUBLE},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.web.security.pojo.NetworkmetricsExample" resultType="java.lang.Long">
    select count(*) from networkmetrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update networkmetrics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.vertexnum != null">
        vertexNum = #{record.vertexnum,jdbcType=INTEGER},
      </if>
      <if test="record.edgenum != null">
        edgeNum = #{record.edgenum,jdbcType=INTEGER},
      </if>
      <if test="record.networkdiameter != null">
        networkDiameter = #{record.networkdiameter,jdbcType=INTEGER},
      </if>
      <if test="record.networkcoreness != null">
        networkCoreness = #{record.networkcoreness,jdbcType=INTEGER},
      </if>
      <if test="record.nodeaveragedegree != null">
        nodeAverageDegree = #{record.nodeaveragedegree,jdbcType=DOUBLE},
      </if>
      <if test="record.averageshortestpathlength != null">
        averageShortestPathLength = #{record.averageshortestpathlength,jdbcType=DOUBLE},
      </if>
      <if test="record.networkefficiency != null">
        networkEfficiency = #{record.networkefficiency,jdbcType=DOUBLE},
      </if>
      <if test="record.networkclusteringcoefficient != null">
        networkClusteringCoefficient = #{record.networkclusteringcoefficient,jdbcType=DOUBLE},
      </if>
      <if test="record.projectid != null">
        projectid = #{record.projectid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update networkmetrics
    set id = #{record.id,jdbcType=INTEGER},
      vertexNum = #{record.vertexnum,jdbcType=INTEGER},
      edgeNum = #{record.edgenum,jdbcType=INTEGER},
      networkDiameter = #{record.networkdiameter,jdbcType=INTEGER},
      networkCoreness = #{record.networkcoreness,jdbcType=INTEGER},
      nodeAverageDegree = #{record.nodeaveragedegree,jdbcType=DOUBLE},
      averageShortestPathLength = #{record.averageshortestpathlength,jdbcType=DOUBLE},
      networkEfficiency = #{record.networkefficiency,jdbcType=DOUBLE},
      networkClusteringCoefficient = #{record.networkclusteringcoefficient,jdbcType=DOUBLE},
      projectid = #{record.projectid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.web.security.pojo.Networkmetrics">
    update networkmetrics
    <set>
      <if test="vertexnum != null">
        vertexNum = #{vertexnum,jdbcType=INTEGER},
      </if>
      <if test="edgenum != null">
        edgeNum = #{edgenum,jdbcType=INTEGER},
      </if>
      <if test="networkdiameter != null">
        networkDiameter = #{networkdiameter,jdbcType=INTEGER},
      </if>
      <if test="networkcoreness != null">
        networkCoreness = #{networkcoreness,jdbcType=INTEGER},
      </if>
      <if test="nodeaveragedegree != null">
        nodeAverageDegree = #{nodeaveragedegree,jdbcType=DOUBLE},
      </if>
      <if test="averageshortestpathlength != null">
        averageShortestPathLength = #{averageshortestpathlength,jdbcType=DOUBLE},
      </if>
      <if test="networkefficiency != null">
        networkEfficiency = #{networkefficiency,jdbcType=DOUBLE},
      </if>
      <if test="networkclusteringcoefficient != null">
        networkClusteringCoefficient = #{networkclusteringcoefficient,jdbcType=DOUBLE},
      </if>
      <if test="projectid != null">
        projectid = #{projectid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.web.security.pojo.Networkmetrics">
    update networkmetrics
    set vertexNum = #{vertexnum,jdbcType=INTEGER},
      edgeNum = #{edgenum,jdbcType=INTEGER},
      networkDiameter = #{networkdiameter,jdbcType=INTEGER},
      networkCoreness = #{networkcoreness,jdbcType=INTEGER},
      nodeAverageDegree = #{nodeaveragedegree,jdbcType=DOUBLE},
      averageShortestPathLength = #{averageshortestpathlength,jdbcType=DOUBLE},
      networkEfficiency = #{networkefficiency,jdbcType=DOUBLE},
      networkClusteringCoefficient = #{networkclusteringcoefficient,jdbcType=DOUBLE},
      projectid = #{projectid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>