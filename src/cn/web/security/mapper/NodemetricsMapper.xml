<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.web.security.mapper.NodemetricsMapper">
  <resultMap id="BaseResultMap" type="cn.web.security.pojo.Nodemetrics">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="degree" jdbcType="INTEGER" property="degree" />
    <result column="inDegree" jdbcType="INTEGER" property="indegree" />
    <result column="outDegree" jdbcType="INTEGER" property="outdegree" />
    <result column="nodeInfluenceRegion" jdbcType="DOUBLE" property="nodeinfluenceregion" />
    <result column="nodeMNC" jdbcType="DOUBLE" property="nodemnc" />
    <result column="nodeDMNC" jdbcType="DOUBLE" property="nodedmnc" />
    <result column="proximity" jdbcType="DOUBLE" property="proximity" />
    <result column="nodeCC" jdbcType="DOUBLE" property="nodecc" />
    <result column="nodeBC" jdbcType="DOUBLE" property="nodebc" />
    <result column="nodeCore" jdbcType="INTEGER" property="nodecore" />
    <result column="degreeCentrality" jdbcType="DOUBLE" property="degreecentrality" />
    <result column="projectid" jdbcType="INTEGER" property="projectid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `degree`, inDegree, outDegree, nodeInfluenceRegion, nodeMNC, nodeDMNC, proximity, 
    nodeCC, nodeBC, nodeCore, degreeCentrality, projectid
  </sql>
  <select id="selectByExample" parameterType="cn.web.security.pojo.NodemetricsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nodemetrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nodemetrics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nodemetrics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.web.security.pojo.NodemetricsExample">
    delete from nodemetrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.web.security.pojo.Nodemetrics">
    insert into nodemetrics (id, `degree`, inDegree, 
      outDegree, nodeInfluenceRegion, nodeMNC, 
      nodeDMNC, proximity, nodeCC, 
      nodeBC, nodeCore, degreeCentrality, 
      projectid)
    values (#{id,jdbcType=INTEGER}, #{degree,jdbcType=INTEGER}, #{indegree,jdbcType=INTEGER}, 
      #{outdegree,jdbcType=INTEGER}, #{nodeinfluenceregion,jdbcType=DOUBLE}, #{nodemnc,jdbcType=DOUBLE}, 
      #{nodedmnc,jdbcType=DOUBLE}, #{proximity,jdbcType=DOUBLE}, #{nodecc,jdbcType=DOUBLE}, 
      #{nodebc,jdbcType=DOUBLE}, #{nodecore,jdbcType=INTEGER}, #{degreecentrality,jdbcType=DOUBLE}, 
      #{projectid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.web.security.pojo.Nodemetrics">
    insert into nodemetrics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="degree != null">
        `degree`,
      </if>
      <if test="indegree != null">
        inDegree,
      </if>
      <if test="outdegree != null">
        outDegree,
      </if>
      <if test="nodeinfluenceregion != null">
        nodeInfluenceRegion,
      </if>
      <if test="nodemnc != null">
        nodeMNC,
      </if>
      <if test="nodedmnc != null">
        nodeDMNC,
      </if>
      <if test="proximity != null">
        proximity,
      </if>
      <if test="nodecc != null">
        nodeCC,
      </if>
      <if test="nodebc != null">
        nodeBC,
      </if>
      <if test="nodecore != null">
        nodeCore,
      </if>
      <if test="degreecentrality != null">
        degreeCentrality,
      </if>
      <if test="projectid != null">
        projectid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=INTEGER},
      </if>
      <if test="indegree != null">
        #{indegree,jdbcType=INTEGER},
      </if>
      <if test="outdegree != null">
        #{outdegree,jdbcType=INTEGER},
      </if>
      <if test="nodeinfluenceregion != null">
        #{nodeinfluenceregion,jdbcType=DOUBLE},
      </if>
      <if test="nodemnc != null">
        #{nodemnc,jdbcType=DOUBLE},
      </if>
      <if test="nodedmnc != null">
        #{nodedmnc,jdbcType=DOUBLE},
      </if>
      <if test="proximity != null">
        #{proximity,jdbcType=DOUBLE},
      </if>
      <if test="nodecc != null">
        #{nodecc,jdbcType=DOUBLE},
      </if>
      <if test="nodebc != null">
        #{nodebc,jdbcType=DOUBLE},
      </if>
      <if test="nodecore != null">
        #{nodecore,jdbcType=INTEGER},
      </if>
      <if test="degreecentrality != null">
        #{degreecentrality,jdbcType=DOUBLE},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.web.security.pojo.NodemetricsExample" resultType="java.lang.Long">
    select count(*) from nodemetrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nodemetrics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.degree != null">
        `degree` = #{record.degree,jdbcType=INTEGER},
      </if>
      <if test="record.indegree != null">
        inDegree = #{record.indegree,jdbcType=INTEGER},
      </if>
      <if test="record.outdegree != null">
        outDegree = #{record.outdegree,jdbcType=INTEGER},
      </if>
      <if test="record.nodeinfluenceregion != null">
        nodeInfluenceRegion = #{record.nodeinfluenceregion,jdbcType=DOUBLE},
      </if>
      <if test="record.nodemnc != null">
        nodeMNC = #{record.nodemnc,jdbcType=DOUBLE},
      </if>
      <if test="record.nodedmnc != null">
        nodeDMNC = #{record.nodedmnc,jdbcType=DOUBLE},
      </if>
      <if test="record.proximity != null">
        proximity = #{record.proximity,jdbcType=DOUBLE},
      </if>
      <if test="record.nodecc != null">
        nodeCC = #{record.nodecc,jdbcType=DOUBLE},
      </if>
      <if test="record.nodebc != null">
        nodeBC = #{record.nodebc,jdbcType=DOUBLE},
      </if>
      <if test="record.nodecore != null">
        nodeCore = #{record.nodecore,jdbcType=INTEGER},
      </if>
      <if test="record.degreecentrality != null">
        degreeCentrality = #{record.degreecentrality,jdbcType=DOUBLE},
      </if>
      <if test="record.projectid != null">
        projectid = #{record.projectid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nodemetrics
    set id = #{record.id,jdbcType=INTEGER},
      `degree` = #{record.degree,jdbcType=INTEGER},
      inDegree = #{record.indegree,jdbcType=INTEGER},
      outDegree = #{record.outdegree,jdbcType=INTEGER},
      nodeInfluenceRegion = #{record.nodeinfluenceregion,jdbcType=DOUBLE},
      nodeMNC = #{record.nodemnc,jdbcType=DOUBLE},
      nodeDMNC = #{record.nodedmnc,jdbcType=DOUBLE},
      proximity = #{record.proximity,jdbcType=DOUBLE},
      nodeCC = #{record.nodecc,jdbcType=DOUBLE},
      nodeBC = #{record.nodebc,jdbcType=DOUBLE},
      nodeCore = #{record.nodecore,jdbcType=INTEGER},
      degreeCentrality = #{record.degreecentrality,jdbcType=DOUBLE},
      projectid = #{record.projectid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.web.security.pojo.Nodemetrics">
    update nodemetrics
    <set>
      <if test="degree != null">
        `degree` = #{degree,jdbcType=INTEGER},
      </if>
      <if test="indegree != null">
        inDegree = #{indegree,jdbcType=INTEGER},
      </if>
      <if test="outdegree != null">
        outDegree = #{outdegree,jdbcType=INTEGER},
      </if>
      <if test="nodeinfluenceregion != null">
        nodeInfluenceRegion = #{nodeinfluenceregion,jdbcType=DOUBLE},
      </if>
      <if test="nodemnc != null">
        nodeMNC = #{nodemnc,jdbcType=DOUBLE},
      </if>
      <if test="nodedmnc != null">
        nodeDMNC = #{nodedmnc,jdbcType=DOUBLE},
      </if>
      <if test="proximity != null">
        proximity = #{proximity,jdbcType=DOUBLE},
      </if>
      <if test="nodecc != null">
        nodeCC = #{nodecc,jdbcType=DOUBLE},
      </if>
      <if test="nodebc != null">
        nodeBC = #{nodebc,jdbcType=DOUBLE},
      </if>
      <if test="nodecore != null">
        nodeCore = #{nodecore,jdbcType=INTEGER},
      </if>
      <if test="degreecentrality != null">
        degreeCentrality = #{degreecentrality,jdbcType=DOUBLE},
      </if>
      <if test="projectid != null">
        projectid = #{projectid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.web.security.pojo.Nodemetrics">
    update nodemetrics
    set `degree` = #{degree,jdbcType=INTEGER},
      inDegree = #{indegree,jdbcType=INTEGER},
      outDegree = #{outdegree,jdbcType=INTEGER},
      nodeInfluenceRegion = #{nodeinfluenceregion,jdbcType=DOUBLE},
      nodeMNC = #{nodemnc,jdbcType=DOUBLE},
      nodeDMNC = #{nodedmnc,jdbcType=DOUBLE},
      proximity = #{proximity,jdbcType=DOUBLE},
      nodeCC = #{nodecc,jdbcType=DOUBLE},
      nodeBC = #{nodebc,jdbcType=DOUBLE},
      nodeCore = #{nodecore,jdbcType=INTEGER},
      degreeCentrality = #{degreecentrality,jdbcType=DOUBLE},
      projectid = #{projectid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>